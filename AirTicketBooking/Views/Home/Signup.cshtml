@model AirTicketBooking.Models.UserReg

@{
    ViewBag.Title = "Signup";
    Layout = "~/Views/Shared/HomeLayout.cshtml";
}
<link href="~/Content/Home/forms/signupforms.css" rel="stylesheet" />



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container-loginform">

        <div class="login-form">
            @if (!string.IsNullOrEmpty(ViewBag.Message))
            {
                <div class="alert alert-danger">
                    @ViewBag.Message
                </div>
            }
            <h2 style="color:black">Sign in</h2>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group2">
                @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group2">
                @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group2">
                @Html.LabelFor(model => model.DateofBirth, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.DateofBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateofBirth, "", new { @class = "text-danger" })
            </div>

            <div class="form-group2">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>

            <div class="form-group2">
                @Html.LabelFor(model => model.phoneNumber, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
            </div>

            <div class="form-group2">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>

            <div class="form-group2">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group2">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            </div>

            <div class="form-group2">
                <button type="submit" class="btn btn-primary">Create</button>
            </div>
        </div>
    </div>
}
