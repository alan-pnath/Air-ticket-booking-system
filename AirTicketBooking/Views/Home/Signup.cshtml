@model AirTicketBooking.Models.UserReg

@{
    ViewBag.Title = "Signup";
    Layout = "~/Views/Shared/HomeLayout.cshtml";
}
<link href="~/Content/Home/forms/signupforms.css" rel="stylesheet" />

<script src="~/Content/signup/validations.js"></script>
<body onload="setMaxDate()">
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container-loginform">

        <div class="login-form">
            @if (!string.IsNullOrEmpty(ViewBag.Message))
            {
                <div class="alert alert-danger">
                    @ViewBag.Message
                </div>
            }
            <h2 style="color:black">Sign in</h2>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group2">
            @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control", id = "firstname", onfocusout = "validateEmptyInput(this.id)" } })
            @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger", id = "firstnameerror" })
            @*<small id="firstnameerror" class="error"></small>*@

        </div>

        <div class="form-group2">
            @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control", id = "lastname", onfocusout = "validateEmptyInput(this.id)" } } )
            @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger", id = "lastnameerror" })
            @*<small id="lastnameerror" class="error"></small>*@

        </div>

            <div class="form-group2">
                @Html.LabelFor(model => model.DateofBirth, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.DateofBirth, new { htmlAttributes = new { @class = "form-control", id = "dob", onchange = "calculateAge()" } })
                @Html.ValidationMessageFor(model => model.DateofBirth, "", new { @class = "text-danger" })
            </div>

            <div class="form-group2">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", id = "age", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger", id = "dob-error" })
                @*<small id="dob-error" class="error"></small>*@
            </div>

            <div class="form-group2">
                @Html.LabelFor(model => model.phoneNumber, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control", id = "phone", onfocusout = "validateNumber()" } })
                @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger", id = "number-error" })
                @*<small id="number-error" class="error"></small>*@
            </div>

            <div class="form-group2">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control",id = "email", onfocusout = "validateEmail()" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger", id = "email-error" })
                @*<small id="email-error" class="error"></small>*@
            </div>

            <div class="form-group2">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", id = "password", onfocusout = "validatePassword()" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger", id = "password-error" })
            </div>

            <div class="form-group2">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", id = "confirm-password", onfocusout = "CheckPassword()" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger", id = "password-error2" })
                @*<small id="password-error" class="error"></small>*@
                @*<small id="password-error2" class="error"></small>*@
            </div>

            <div class="form-group2">
                <button type="submit" class="btn btn-primary">Create</button>
            </div>
        </div>
    </div>
}
    <style>
        .error{
            color: black;
        }
    </style>